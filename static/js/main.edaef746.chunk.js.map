{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","cardlist","props","monsters","map","SearchBox","placeholder","handelChange","type","onChange","App","useState","searchText","setsearchText","filteredMonsters","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAEe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC3B,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAKJ,EAAQK,UCHV,SAASC,EAASC,GAC7B,OACI,qBAAKN,UAAU,YAAf,SAEOM,EAAMC,SAASC,KAAI,SAAAT,GACf,OAAO,cAACD,EAAD,CAAuBC,QAASA,GAArBA,EAAQI,S,MCN9B,SAASM,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aAC5C,OACI,8BACI,uBAAOC,KAAK,SAASZ,UAAU,aAAaa,SAAUF,EAAcD,YAAaA,MC0B9EI,MA3Bf,WACE,MAAgCC,mBAAS,CACvC,CAAEX,KAAM,eAAgBD,GAAG,SAC3B,CAAEC,KAAM,SAAUD,GAAG,SACrB,CAAEC,KAAM,UAAWD,GAAG,SACtB,CAAEC,KAAM,eAAeD,GAAG,SAC1B,CAAEC,KAAM,SAASD,GAAG,YACpB,CAAEC,KAAM,UAAUD,GAAG,UACrB,CAAEC,KAAM,eAAeD,GAAG,UAC1B,CAAEC,KAAM,SAAUD,GAAG,OACrB,CAAEC,KAAM,UAAUD,GAAG,cATvB,mBAAOI,EAAP,KAYA,GAZA,KAYiCQ,mBAAS,KAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAiBX,EAASY,QAAO,SAAApB,GAAO,OAAEA,EAAQK,KAAKgB,cAAcC,SAASL,EAAWI,kBAE/F,OACE,sBAAKpB,UAAU,MAAf,UACE,kDACA,cAACS,EAAD,CAAWE,aAAc,SAAAW,GAAC,OAAEL,EAAcK,EAAEC,OAAOC,QAAQd,YAAY,oBACvE,cAAC,EAAD,CAAUH,SAAUW,QCdXO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.edaef746.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\nexport default function Card( {monster} ) {\r\n    return (\r\n        <div className=\"card\">\r\n            <img alt=\"Monster\" src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}/>\r\n            <h2>{monster.name}</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './card-list.css';\r\nimport Card from '../card/card';\r\nexport default function cardlist(props) {\r\n    return (\r\n        <div className=\"card-list\">\r\n           {\r\n               props.monsters.map(monster=>{\r\n                   return <Card key={monster.id} monster={monster}/>\r\n               })\r\n           } \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './searchbox.css'\r\nexport default function SearchBox( {placeholder,handelChange} ) {\r\n    return (\r\n        <div>\r\n            <input type=\"search\" className=\"search-box\" onChange={handelChange} placeholder={placeholder}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Cardlist from \"./components/card-list/card-list\";\nimport SearchBox from \"./components/search-box/search-box\";\nfunction App() {\n  const [monsters, setmonsters] = useState([\n    { name: \"Frankenstien\" ,id:\"jsjaj\"},\n    { name: \"Zombie\" ,id:\"1qdas\"},\n    { name: \"Dracula\", id:\"14sds\"},\n    { name: \"Frankenstien\",id:\"6mmds\" },\n    { name: \"Zombie\",id:\"98kdjksa\" },\n    { name: \"Dracula\",id:\"8187yh\" },\n    { name: \"Frankenstien\",id:\"6jnajk\" },\n    { name: \"Zombie\" ,id:\"lkw\"},\n    { name: \"Dracula\",id:\"maksdjwk\" },\n  ]);\n\n  const [searchText,setsearchText]=useState('');\n\n\n  const filteredMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchText.toLowerCase()))\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox handelChange={e=>setsearchText(e.target.value)} placeholder=\"Name of Monster\"/>\n      <Cardlist monsters={filteredMonsters}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}